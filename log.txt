this is the log of all the commits and changes i made using react and all the notes are also stored inside the react 
1 - created readme 
2 - created this page 
3- allows for reconciliation 
4- jsxml code is used in this 
_____________________________________________________________________________
index.js is the guardian file . basically 
if we inspect the html ,
even tho we see the tags and all the same way ,
so we essentially wrote once and used as much as we want . 

log-2 : created a new file called components --> users.js and pasted the app.js inside it . 
made these changes --->

app.js
// import logo from './logo.svg';
// import './App.css';
import User from "./components/users";

function App() {
  return (
    <div>
      <h1>hello i'm kirito code1</h1>
    <User />
    </div>
    
    // <div className="App">
    //   <header className="App-header">
    //     <img src={logo} className="App-logo" alt="logo" />
    //     <p>
    //       Edit <code>src/App.js</code> and save to reload.
    //     </p>
    //     <a
    //       className="App-link"
    //       href="https://reactjs.org"
    //       target="_blank"
    //       rel="noopener noreferrer"
    //     >
    //       Learn React
    //     </a>
    //   </header>
    // </div>
  );
}
export default App;
----------------------------------------------------------------------------------------------------------------------------------
users.js->
// import logo from './logo.svg';
// import './App.css';


function User(){
    return (
    <div>
    <h1>aryan kathawale</h1>
    <h4>thie is FSWD </h4>
    </div>
    
);}

export default User;





============================================================================
props or properties code in the log ->


// import logo from './logo.svg';
// import './App.css';
import User from "./components/users";

function App() {
  return (
    <div>
      <h1>hello i'm kirito code1</h1>
    <User  name = "aryan" description="this is the description"/>
    <User name = "noice namo" description = "no no nooooooooo"/>
    </div>
  );
}
export default App;












_____________________________________________________________________________

1.functional components 

function name(props){
    return(
        <div>
        everything should be inside this div 
        
        </div>

    )


}




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
log -3 :
2.class components
inside user.js we defined new code ---->

// import logo from './logo.svg';
// import './App.css';
//? imported react log - 3
import React from "react";
class User extends React.Component {
    constructor(props) {//!this constructor will be called once super is used
        super(props);//!super used to call the Constructor above
        this.state = {//? a state is a set of data that an individual component can hold ...
            planet: "earth"
        };
        console.log("hey this is for constructor")
    };
    componentDidMount() {
        //!we can update our states in this function
        this.setState({ planet: "mars" });
        console.log("hey this is from component did mount ")
    }
    render() {
        console.log("hey this is the destructor")
        return(
        <div>
            <h1>{this.props.name}</h1>
            <h4>{this.props.description}</h4>
            <h4>{this.state.planet}</h4>
    </div>)
    }
}
// function User(props) {
//     return (
//     // <div>
//     // <h1>aryan kathawale</h1>
//     // <h4>thie is FSWD </h4>
//     // </div>
//         <div>
//             <h1>{props.name}</h1>
//             <h4>{props.description}</h4>
//     </div>
//     );
// }
export default User;

index & app.js are the same as before.
================================================================================================================
log-4:
life cycle methods are the timeline of components that are rendered , we have 3 states 
mount-->this is the creation state in which we create an instance of everything 
update-->in this we update the component 
unmount-->this is the ending or the Death of the function . 
app created on 21/12/21